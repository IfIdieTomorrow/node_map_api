<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
  <title>MyFirstMap</title>
  <link rel="stylesheet" href="/stylesheets/style.css">
  <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=7rr3ujbthb"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
  <script src="//dapi.kakao.com/v2/maps/sdk.js?appkey=3935fcb1ba2f8484f312d827684afe0e&libraries=services"></script>
</head>
<body>
<div id="navbar">myfirstmap</div>
<div id="infoBox">
  <div id="infoTitle">현재날짜</div>
  <div id="infoContent"></div>
</div>
<div id="search">
  <input id="search_input" placeholder="목적지를 입력해주세요" />
  <button id="search_button">검색</button>
</div>
<div id="current">현재위치</div>
<div id="map" style="width:100%; height: 100vh;"></div>

<script src="/data/data.js"></script>
<script>

//네이버 지도 불러오기
let mapOptions = {
    center: new naver.maps.LatLng(37.3595704, 127.105399),
    zoom: 10
};

//map이라는 id속성명을 찾아서 네이버 지도를 적용
let map = new naver.maps.Map('map', mapOptions);

let markerList = [];
let infoWindowList = [];


// 미리 설정해둔 지역을 마커 표시하기
for(let idx of data){
  let latlng = new naver.maps.LatLng(idx.lat, idx.lng);
  marker = new naver.maps.Marker({
    map : map,
    position : latlng,
    icon : {
      content : "<div class='marker'></div>",
      //마커 아이콘의 중심점
      anchor : new naver.maps.Point(12, 12)
    }
  });

  // 마커 클릭시 나올 정보
  let content = 
  `<div class='infowindow_wrap'>
    <div class='infowindow_title'>${idx.title}</div>
    <div class='infowindow_content'>${idx.content}</div>  
    <div class='infowindow_date'>${idx.date}</div>    
  </div>`;

  // 정보 띄우기
  let infoWindow = new naver.maps.InfoWindow({
    content : content,
    backgroundColor : "#00ff0000",
    borderColor : "#00ff0000",
    anchorSize : new naver.maps.Size(0, 0) //꼬리표가 나오지 않도록 설정
  })

  markerList.push(marker);
  infoWindowList.push(infoWindow);
}

for(let i=0, ii = markerList.length; i < ii; i++){
  // 맵을 클릭했을때 이벤트 설정
  naver.maps.Event.addListener(map, "click", ClickMap(i));
  // 마커를 클릭했을때 이벤트 설정
  naver.maps.Event.addListener(markerList[i],"click",getClickHandler(i))
}

// 마커를 클릭시 정보를 띄워주거나 닫아주는 함수
function getClickHandler(i){
  return function() {
    let marker = markerList[i];
    let infoWindow = infoWindowList[i];
    if(infoWindow.getMap()){
      infoWindow.close();
    } else {
      infoWindow.open(map, marker);
    }
  }
}

// 맵 클릭시 오픈되어 있는 마커의 정보를 닫아준다.
function ClickMap(i){
  return function(){
    let infoWindow = infoWindowList[i];
    infoWindow.close();
  }
}



let currentUser = true;

$('#current').click(()=>{
  if('geolocation' in navigator){
    navigator.geolocation.getCurrentPosition((position)=>{
      const lat = position.coords.latitude;
      const lng = position.coords.longitude;
      const latlng = new naver.maps.LatLng(lat, lng);
      if(currentUser){
        marker = new naver.maps.Marker({
          map : map,
          position : latlng,
          icon : {
            content : '<img class="pulse" draggable="false" unselectable="on" src="https://myfirstmap.s3.ap-northeast-2.amazonaws.com/circle.png"/>',
            anchor : new naver.maps.Point(11, 11)
          }
        });
        currentUser = false;
      }
      map.setZoom(14, false);
      map.panTo(latlng);
    });
  } else {
    alert("위치정보 사용 불가능")
  }
});

let ps = new kakao.maps.services.Places();
let search_arr = [];

$('#search_input').on("keydown",function(e){
  //13은 엔터키
  if(e.keyCode === 13){
    let content = $(this).val();  
    ps.keywordSearch(content, placeSearchCB);
  }
});

$('#search_button').on("click", function(){
  let content = $('#search_input').val();
  ps.keywordSearch(content, placeSearchCB);  
});

function placeSearchCB(data, status){
  if(status === kakao.maps.services.Status.OK){
    let target = data[0];
    console.log(target)
    const lat = target.y;
    const lng = target.x;
    const latlng = new naver.maps.LatLng(lat, lng);
    marker = new naver.maps.Marker({
      map : map,
      position : latlng,
      icon : {
        content : "<div class='search_marker'></div>",
        anchor : new naver.maps.Point(12, 12)
      }
    });
    if(search_arr.length == 0){
      search_arr.push(marker);
    } else {
      search_arr.push(marker);
      let pre_marker = search_arr.splice(0,1);
      pre_marker[0].setMap(null);
    }
    map.setZoom(14, false);
    map.panTo(latlng);
  } else {
    alert("검색 결과가 존재하지 않습니다.")
  }
}

function getFormatDate(date){
  let year = date.getFullYear();             
  let month = (1 + date.getMonth());          
  month = month >= 10 ? month : '0' + month;  
  let day = date.getDate();                  
  day = day >= 10 ? day : '0' + day;          
  return  year + '.' + month + '.' + day;       
}
document.getElementById('infoContent').innerHTML = getFormatDate(new Date());
</script>
</body>
</html>